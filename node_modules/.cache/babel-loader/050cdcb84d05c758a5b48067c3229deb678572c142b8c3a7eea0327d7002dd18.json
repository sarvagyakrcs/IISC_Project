{"ast":null,"code":"var _jsxFileName = \"/Users/sarvagyakumar/Desktop/IISC_Project/src/components/msalLogin/msal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { PublicClientApplication } from \"@azure/msal-browser\";\nimport { client_id, tenant_id } from \"../../data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Msal = () => {\n  _s();\n  const [msalInstance, setMsalInstance] = useState(null);\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const initializeMsal = async () => {\n      const msalConfig = {\n        auth: {\n          clientId: client_id,\n          authority: `https://login.microsoftonline.com/${tenant_id}`\n        }\n      };\n      const instance = new PublicClientApplication(msalConfig);\n      setMsalInstance(instance);\n      try {\n        // Check if msalInstance is not null before calling loginPopup\n        if (msalInstance) {\n          const loginResponse = await msalInstance.loginPopup({});\n          // Assuming successful login, you can set the user state\n          setUser(loginResponse.account);\n        } else {\n          console.error('MSAL instance is null.');\n        }\n      } catch (err) {\n        // Handle login error\n        console.error('Login error:', err);\n      }\n      var request = {\n        scopes: [\"User.Read\"]\n      };\n      msalInstance.acquireTokenSilent(request).then(tokenResponse => {\n        // Do something with the tokenResponse\n      }).catch(async error => {\n        if (error instanceof InteractionRequiredAuthError) {\n          // fallback to interaction when silent call fails\n          return msalInstance.acquireTokenPopup(request);\n        }\n\n        // handle other errors\n      });\n    };\n\n    initializeMsal();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: user ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Welcome, \", user.name, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please log in to access the application.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(Msal, \"BSI2A2JFC6Sm7WXSVuIkPxqkl9A=\");\n_c = Msal;\nexport default Msal;\nvar _c;\n$RefreshReg$(_c, \"Msal\");","map":{"version":3,"names":["React","useState","useEffect","PublicClientApplication","client_id","tenant_id","jsxDEV","_jsxDEV","Msal","_s","msalInstance","setMsalInstance","user","setUser","initializeMsal","msalConfig","auth","clientId","authority","instance","loginResponse","loginPopup","account","console","error","err","request","scopes","acquireTokenSilent","then","tokenResponse","catch","InteractionRequiredAuthError","acquireTokenPopup","children","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sarvagyakumar/Desktop/IISC_Project/src/components/msalLogin/msal.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {PublicClientApplication} from \"@azure/msal-browser\";\nimport {client_id, tenant_id} from \"../../data\";\n\nconst Msal = () => {\n    const [msalInstance, setMsalInstance] = useState( null );\n    const [user, setUser] = useState( null );\n\n    useEffect( () => {\n        const initializeMsal = async () => {\n            const msalConfig = {\n                auth: {\n                    clientId: client_id,\n                    authority: `https://login.microsoftonline.com/${tenant_id}`\n                }\n            };\n            const instance = new PublicClientApplication( msalConfig );\n            setMsalInstance( instance );\n\n            try {\n                // Check if msalInstance is not null before calling loginPopup\n                if ( msalInstance ) {\n                    const loginResponse = await msalInstance.loginPopup( {} );\n                    // Assuming successful login, you can set the user state\n                    setUser( loginResponse.account );\n                } else {\n                    console.error( 'MSAL instance is null.' );\n                }\n            } catch (err) {\n                // Handle login error\n                console.error( 'Login error:', err );\n            }\n            var request = {\n                scopes: [\"User.Read\"],\n            };\n\n            msalInstance.acquireTokenSilent( request ).then( tokenResponse => {\n                // Do something with the tokenResponse\n            } ).catch( async (error) => {\n                if ( error instanceof InteractionRequiredAuthError ) {\n                    // fallback to interaction when silent call fails\n                    return msalInstance.acquireTokenPopup( request );\n                }\n\n                // handle other errors\n            } )\n        };\n\n\n        initializeMsal();\n    }, [] );\n\n    return (\n        <div>\n            {user ? (\n                <p>Welcome, {user.name}!</p>\n            ) : (\n                <p>Please log in to access the application.</p>\n            )}\n        </div>\n    );\n};\n\nexport default Msal;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAAQC,uBAAuB,QAAO,qBAAqB;AAC3D,SAAQC,SAAS,EAAEC,SAAS,QAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAE,IAAK,CAAC;EACxD,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAE,IAAK,CAAC;EAExCC,SAAS,CAAE,MAAM;IACb,MAAMY,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMC,UAAU,GAAG;QACfC,IAAI,EAAE;UACFC,QAAQ,EAAEb,SAAS;UACnBc,SAAS,EAAG,qCAAoCb,SAAU;QAC9D;MACJ,CAAC;MACD,MAAMc,QAAQ,GAAG,IAAIhB,uBAAuB,CAAEY,UAAW,CAAC;MAC1DJ,eAAe,CAAEQ,QAAS,CAAC;MAE3B,IAAI;QACA;QACA,IAAKT,YAAY,EAAG;UAChB,MAAMU,aAAa,GAAG,MAAMV,YAAY,CAACW,UAAU,CAAE,CAAC,CAAE,CAAC;UACzD;UACAR,OAAO,CAAEO,aAAa,CAACE,OAAQ,CAAC;QACpC,CAAC,MAAM;UACHC,OAAO,CAACC,KAAK,CAAE,wBAAyB,CAAC;QAC7C;MACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;QACV;QACAF,OAAO,CAACC,KAAK,CAAE,cAAc,EAAEC,GAAI,CAAC;MACxC;MACA,IAAIC,OAAO,GAAG;QACVC,MAAM,EAAE,CAAC,WAAW;MACxB,CAAC;MAEDjB,YAAY,CAACkB,kBAAkB,CAAEF,OAAQ,CAAC,CAACG,IAAI,CAAEC,aAAa,IAAI;QAC9D;MAAA,CACF,CAAC,CAACC,KAAK,CAAE,MAAOP,KAAK,IAAK;QACxB,IAAKA,KAAK,YAAYQ,4BAA4B,EAAG;UACjD;UACA,OAAOtB,YAAY,CAACuB,iBAAiB,CAAEP,OAAQ,CAAC;QACpD;;QAEA;MACJ,CAAE,CAAC;IACP,CAAC;;IAGDZ,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAG,CAAC;EAEP,oBACIP,OAAA;IAAA2B,QAAA,EACKtB,IAAI,gBACDL,OAAA;MAAA2B,QAAA,GAAG,WAAS,EAACtB,IAAI,CAACuB,IAAI,EAAC,GAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAE5BhC,OAAA;MAAA2B,QAAA,EAAG;IAAwC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACjD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC9B,EAAA,CAzDID,IAAI;AAAAgC,EAAA,GAAJhC,IAAI;AA2DV,eAAeA,IAAI;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}