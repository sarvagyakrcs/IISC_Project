{"ast":null,"code":"var _jsxFileName = \"/Users/sarvagyakumar/Desktop/IISC_Project/src/components/msalLogin/msal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { PublicClientApplication, InteractionRequiredAuthError } from \"@azure/msal-browser\";\nimport { client_id, tenant_id } from \"../../data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Msal = () => {\n  _s();\n  const [msalInstance, setMsalInstance] = useState(null);\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const initializeMsal = async () => {\n      const msalConfig = {\n        auth: {\n          clientId: client_id,\n          authority: `https://login.microsoftonline.com/${tenant_id}`\n        }\n      };\n      const instance = new PublicClientApplication(msalConfig);\n      setMsalInstance(instance);\n      try {\n        // Check if msalInstance is not null before calling loginPopup\n        if (msalInstance) {\n          const loginResponse = await msalInstance.loginPopup({});\n          // Assuming successful login, you can set the user state\n          setUser(loginResponse.account);\n\n          // Move the token acquisition code here\n          const request = {\n            scopes: [\"User.Read\"]\n          };\n          msalInstance.acquireTokenSilent(request).then(tokenResponse => {\n            // Do something with the tokenResponse\n          }).catch(async error => {\n            if (error instanceof InteractionRequiredAuthError) {\n              // fallback to interaction when silent call fails\n              return msalInstance.acquireTokenPopup(request);\n            }\n\n            // handle other errors\n          });\n        } else {\n          console.error('MSAL instance is null.');\n        }\n      } catch (err) {\n        // Handle login error\n        console.error('Login error:', err);\n      }\n    };\n    initializeMsal();\n  }, [msalInstance]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: user ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Welcome, \", user.name, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please log in to access the application.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(Msal, \"BSI2A2JFC6Sm7WXSVuIkPxqkl9A=\");\n_c = Msal;\nexport default Msal;\nvar _c;\n$RefreshReg$(_c, \"Msal\");","map":{"version":3,"names":["React","useState","useEffect","PublicClientApplication","InteractionRequiredAuthError","client_id","tenant_id","jsxDEV","_jsxDEV","Msal","_s","msalInstance","setMsalInstance","user","setUser","initializeMsal","msalConfig","auth","clientId","authority","instance","loginResponse","loginPopup","account","request","scopes","acquireTokenSilent","then","tokenResponse","catch","error","acquireTokenPopup","console","err","children","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sarvagyakumar/Desktop/IISC_Project/src/components/msalLogin/msal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { PublicClientApplication, InteractionRequiredAuthError } from \"@azure/msal-browser\";\nimport { client_id, tenant_id } from \"../../data\";\n\nconst Msal = () => {\n    const [msalInstance, setMsalInstance] = useState(null);\n    const [user, setUser] = useState(null);\n\n    useEffect(() => {\n        const initializeMsal = async () => {\n            const msalConfig = {\n                auth: {\n                    clientId: client_id,\n                    authority: `https://login.microsoftonline.com/${tenant_id}`\n                }\n            };\n            const instance = new PublicClientApplication(msalConfig);\n            setMsalInstance(instance);\n\n            try {\n                // Check if msalInstance is not null before calling loginPopup\n                if (msalInstance) {\n                    const loginResponse = await msalInstance.loginPopup({});\n                    // Assuming successful login, you can set the user state\n                    setUser(loginResponse.account);\n\n                    // Move the token acquisition code here\n                    const request = {\n                        scopes: [\"User.Read\"],\n                    };\n\n                    msalInstance.acquireTokenSilent(request)\n                        .then(tokenResponse => {\n                            // Do something with the tokenResponse\n                        })\n                        .catch(async (error) => {\n                            if (error instanceof InteractionRequiredAuthError) {\n                                // fallback to interaction when silent call fails\n                                return msalInstance.acquireTokenPopup(request);\n                            }\n\n                            // handle other errors\n                        });\n                } else {\n                    console.error('MSAL instance is null.');\n                }\n            } catch (err) {\n                // Handle login error\n                console.error('Login error:', err);\n            }\n        };\n\n        initializeMsal();\n    }, [msalInstance]);\n\n    return (\n        <div>\n            {user ? (\n                <p>Welcome, {user.name}!</p>\n            ) : (\n                <p>Please log in to access the application.</p>\n            )}\n        </div>\n    );\n};\n\nexport default Msal;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,uBAAuB,EAAEC,4BAA4B,QAAQ,qBAAqB;AAC3F,SAASC,SAAS,EAAEC,SAAS,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZ,MAAMa,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMC,UAAU,GAAG;QACfC,IAAI,EAAE;UACFC,QAAQ,EAAEb,SAAS;UACnBc,SAAS,EAAG,qCAAoCb,SAAU;QAC9D;MACJ,CAAC;MACD,MAAMc,QAAQ,GAAG,IAAIjB,uBAAuB,CAACa,UAAU,CAAC;MACxDJ,eAAe,CAACQ,QAAQ,CAAC;MAEzB,IAAI;QACA;QACA,IAAIT,YAAY,EAAE;UACd,MAAMU,aAAa,GAAG,MAAMV,YAAY,CAACW,UAAU,CAAC,CAAC,CAAC,CAAC;UACvD;UACAR,OAAO,CAACO,aAAa,CAACE,OAAO,CAAC;;UAE9B;UACA,MAAMC,OAAO,GAAG;YACZC,MAAM,EAAE,CAAC,WAAW;UACxB,CAAC;UAEDd,YAAY,CAACe,kBAAkB,CAACF,OAAO,CAAC,CACnCG,IAAI,CAACC,aAAa,IAAI;YACnB;UAAA,CACH,CAAC,CACDC,KAAK,CAAC,MAAOC,KAAK,IAAK;YACpB,IAAIA,KAAK,YAAY1B,4BAA4B,EAAE;cAC/C;cACA,OAAOO,YAAY,CAACoB,iBAAiB,CAACP,OAAO,CAAC;YAClD;;YAEA;UACJ,CAAC,CAAC;QACV,CAAC,MAAM;UACHQ,OAAO,CAACF,KAAK,CAAC,wBAAwB,CAAC;QAC3C;MACJ,CAAC,CAAC,OAAOG,GAAG,EAAE;QACV;QACAD,OAAO,CAACF,KAAK,CAAC,cAAc,EAAEG,GAAG,CAAC;MACtC;IACJ,CAAC;IAEDlB,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,CAACJ,YAAY,CAAC,CAAC;EAElB,oBACIH,OAAA;IAAA0B,QAAA,EACKrB,IAAI,gBACDL,OAAA;MAAA0B,QAAA,GAAG,WAAS,EAACrB,IAAI,CAACsB,IAAI,EAAC,GAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAE5B/B,OAAA;MAAA0B,QAAA,EAAG;IAAwC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACjD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC7B,EAAA,CA5DID,IAAI;AAAA+B,EAAA,GAAJ/B,IAAI;AA8DV,eAAeA,IAAI;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}