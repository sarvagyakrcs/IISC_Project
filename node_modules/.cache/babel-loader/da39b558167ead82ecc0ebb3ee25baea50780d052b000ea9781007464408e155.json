{"ast":null,"code":"/*! @azure/msal-common v14.5.0 2023-12-01 */\n'use strict';\n\nimport { AUTHORITY_METADATA_CONSTANTS } from '../../utils/Constants.mjs';\nimport { TimeUtils } from '../../utils/TimeUtils.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/** @internal */\nclass AuthorityMetadataEntity {\n  constructor() {\n    this.expiresAt = TimeUtils.nowSeconds() + AUTHORITY_METADATA_CONSTANTS.REFRESH_TIME_SECONDS;\n  }\n  /**\n   * Update the entity with new aliases, preferred_cache and preferred_network values\n   * @param metadata\n   * @param fromNetwork\n   */\n  updateCloudDiscoveryMetadata(metadata, fromNetwork) {\n    this.aliases = metadata.aliases;\n    this.preferred_cache = metadata.preferred_cache;\n    this.preferred_network = metadata.preferred_network;\n    this.aliasesFromNetwork = fromNetwork;\n  }\n  /**\n   * Update the entity with new endpoints\n   * @param metadata\n   * @param fromNetwork\n   */\n  updateEndpointMetadata(metadata, fromNetwork) {\n    this.authorization_endpoint = metadata.authorization_endpoint;\n    this.token_endpoint = metadata.token_endpoint;\n    this.end_session_endpoint = metadata.end_session_endpoint;\n    this.issuer = metadata.issuer;\n    this.endpointsFromNetwork = fromNetwork;\n    this.jwks_uri = metadata.jwks_uri;\n  }\n  /**\n   * Save the authority that was used to create this cache entry\n   * @param authority\n   */\n  updateCanonicalAuthority(authority) {\n    this.canonical_authority = authority;\n  }\n  /**\n   * Reset the exiresAt value\n   */\n  resetExpiresAt() {\n    this.expiresAt = TimeUtils.nowSeconds() + AUTHORITY_METADATA_CONSTANTS.REFRESH_TIME_SECONDS;\n  }\n  /**\n   * Returns whether or not the data needs to be refreshed\n   */\n  isExpired() {\n    return this.expiresAt <= TimeUtils.nowSeconds();\n  }\n  /**\n   * Validates an entity: checks for all expected params\n   * @param entity\n   */\n  static isAuthorityMetadataEntity(key, entity) {\n    if (!entity) {\n      return false;\n    }\n    return key.indexOf(AUTHORITY_METADATA_CONSTANTS.CACHE_KEY) === 0 && entity.hasOwnProperty(\"aliases\") && entity.hasOwnProperty(\"preferred_cache\") && entity.hasOwnProperty(\"preferred_network\") && entity.hasOwnProperty(\"canonical_authority\") && entity.hasOwnProperty(\"authorization_endpoint\") && entity.hasOwnProperty(\"token_endpoint\") && entity.hasOwnProperty(\"issuer\") && entity.hasOwnProperty(\"aliasesFromNetwork\") && entity.hasOwnProperty(\"endpointsFromNetwork\") && entity.hasOwnProperty(\"expiresAt\") && entity.hasOwnProperty(\"jwks_uri\");\n  }\n}\nexport { AuthorityMetadataEntity };","map":{"version":3,"names":["AuthorityMetadataEntity","constructor","expiresAt","TimeUtils","nowSeconds","AUTHORITY_METADATA_CONSTANTS","REFRESH_TIME_SECONDS","updateCloudDiscoveryMetadata","metadata","fromNetwork","aliases","preferred_cache","preferred_network","aliasesFromNetwork","updateEndpointMetadata","authorization_endpoint","token_endpoint","end_session_endpoint","issuer","endpointsFromNetwork","jwks_uri","updateCanonicalAuthority","authority","canonical_authority","resetExpiresAt","isExpired","isAuthorityMetadataEntity","key","entity","indexOf","CACHE_KEY","hasOwnProperty"],"sources":["/Users/sarvagyakumar/Desktop/IISC_Project/node_modules/@azure/msal-common/src/cache/entities/AuthorityMetadataEntity.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CloudDiscoveryMetadata } from \"../../authority/CloudDiscoveryMetadata\";\nimport { OpenIdConfigResponse } from \"../../authority/OpenIdConfigResponse\";\nimport { AUTHORITY_METADATA_CONSTANTS } from \"../../utils/Constants\";\nimport { TimeUtils } from \"../../utils/TimeUtils\";\n\n/** @internal */\nexport class AuthorityMetadataEntity {\n    aliases: Array<string>;\n    preferred_cache: string;\n    preferred_network: string;\n    canonical_authority: string;\n    authorization_endpoint: string;\n    token_endpoint: string;\n    end_session_endpoint?: string;\n    issuer: string;\n    aliasesFromNetwork: boolean;\n    endpointsFromNetwork: boolean;\n    expiresAt: number;\n    jwks_uri: string;\n\n    constructor() {\n        this.expiresAt =\n            TimeUtils.nowSeconds() +\n            AUTHORITY_METADATA_CONSTANTS.REFRESH_TIME_SECONDS;\n    }\n\n    /**\n     * Update the entity with new aliases, preferred_cache and preferred_network values\n     * @param metadata\n     * @param fromNetwork\n     */\n    updateCloudDiscoveryMetadata(\n        metadata: CloudDiscoveryMetadata,\n        fromNetwork: boolean\n    ): void {\n        this.aliases = metadata.aliases;\n        this.preferred_cache = metadata.preferred_cache;\n        this.preferred_network = metadata.preferred_network;\n        this.aliasesFromNetwork = fromNetwork;\n    }\n\n    /**\n     * Update the entity with new endpoints\n     * @param metadata\n     * @param fromNetwork\n     */\n    updateEndpointMetadata(\n        metadata: OpenIdConfigResponse,\n        fromNetwork: boolean\n    ): void {\n        this.authorization_endpoint = metadata.authorization_endpoint;\n        this.token_endpoint = metadata.token_endpoint;\n        this.end_session_endpoint = metadata.end_session_endpoint;\n        this.issuer = metadata.issuer;\n        this.endpointsFromNetwork = fromNetwork;\n        this.jwks_uri = metadata.jwks_uri;\n    }\n\n    /**\n     * Save the authority that was used to create this cache entry\n     * @param authority\n     */\n    updateCanonicalAuthority(authority: string): void {\n        this.canonical_authority = authority;\n    }\n\n    /**\n     * Reset the exiresAt value\n     */\n    resetExpiresAt(): void {\n        this.expiresAt =\n            TimeUtils.nowSeconds() +\n            AUTHORITY_METADATA_CONSTANTS.REFRESH_TIME_SECONDS;\n    }\n\n    /**\n     * Returns whether or not the data needs to be refreshed\n     */\n    isExpired(): boolean {\n        return this.expiresAt <= TimeUtils.nowSeconds();\n    }\n\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isAuthorityMetadataEntity(key: string, entity: object): boolean {\n        if (!entity) {\n            return false;\n        }\n\n        return (\n            key.indexOf(AUTHORITY_METADATA_CONSTANTS.CACHE_KEY) === 0 &&\n            entity.hasOwnProperty(\"aliases\") &&\n            entity.hasOwnProperty(\"preferred_cache\") &&\n            entity.hasOwnProperty(\"preferred_network\") &&\n            entity.hasOwnProperty(\"canonical_authority\") &&\n            entity.hasOwnProperty(\"authorization_endpoint\") &&\n            entity.hasOwnProperty(\"token_endpoint\") &&\n            entity.hasOwnProperty(\"issuer\") &&\n            entity.hasOwnProperty(\"aliasesFromNetwork\") &&\n            entity.hasOwnProperty(\"endpointsFromNetwork\") &&\n            entity.hasOwnProperty(\"expiresAt\") &&\n            entity.hasOwnProperty(\"jwks_uri\")\n        );\n    }\n}\n"],"mappings":";;;;;;AAAA;;;AAGG;AAOH;MACaA,uBAAuB;EAchCC,YAAA;IACI,IAAI,CAACC,SAAS,GACVC,SAAS,CAACC,UAAU,EAAE,GACtBC,4BAA4B,CAACC,oBAAoB;;EAGzD;;;;AAIG;EACHC,4BAA4BA,CACxBC,QAAgC,EAChCC,WAAoB;IAEpB,IAAI,CAACC,OAAO,GAAGF,QAAQ,CAACE,OAAO;IAC/B,IAAI,CAACC,eAAe,GAAGH,QAAQ,CAACG,eAAe;IAC/C,IAAI,CAACC,iBAAiB,GAAGJ,QAAQ,CAACI,iBAAiB;IACnD,IAAI,CAACC,kBAAkB,GAAGJ,WAAW;;EAGzC;;;;AAIG;EACHK,sBAAsBA,CAClBN,QAA8B,EAC9BC,WAAoB;IAEpB,IAAI,CAACM,sBAAsB,GAAGP,QAAQ,CAACO,sBAAsB;IAC7D,IAAI,CAACC,cAAc,GAAGR,QAAQ,CAACQ,cAAc;IAC7C,IAAI,CAACC,oBAAoB,GAAGT,QAAQ,CAACS,oBAAoB;IACzD,IAAI,CAACC,MAAM,GAAGV,QAAQ,CAACU,MAAM;IAC7B,IAAI,CAACC,oBAAoB,GAAGV,WAAW;IACvC,IAAI,CAACW,QAAQ,GAAGZ,QAAQ,CAACY,QAAQ;;EAGrC;;;AAGG;EACHC,wBAAwBA,CAACC,SAAiB;IACtC,IAAI,CAACC,mBAAmB,GAAGD,SAAS;;EAGxC;;AAEG;EACHE,cAAcA,CAAA;IACV,IAAI,CAACtB,SAAS,GACVC,SAAS,CAACC,UAAU,EAAE,GACtBC,4BAA4B,CAACC,oBAAoB;;EAGzD;;AAEG;EACHmB,SAASA,CAAA;IACL,OAAO,IAAI,CAACvB,SAAS,IAAIC,SAAS,CAACC,UAAU,EAAE;;EAGnD;;;AAGG;EACH,OAAOsB,yBAAyBA,CAACC,GAAW,EAAEC,MAAc;IACxD,IAAI,CAACA,MAAM,EAAE;MACT,OAAO,KAAK;IACf;IAED,OACID,GAAG,CAACE,OAAO,CAACxB,4BAA4B,CAACyB,SAAS,CAAC,KAAK,CAAC,IACzDF,MAAM,CAACG,cAAc,CAAC,SAAS,CAAC,IAChCH,MAAM,CAACG,cAAc,CAAC,iBAAiB,CAAC,IACxCH,MAAM,CAACG,cAAc,CAAC,mBAAmB,CAAC,IAC1CH,MAAM,CAACG,cAAc,CAAC,qBAAqB,CAAC,IAC5CH,MAAM,CAACG,cAAc,CAAC,wBAAwB,CAAC,IAC/CH,MAAM,CAACG,cAAc,CAAC,gBAAgB,CAAC,IACvCH,MAAM,CAACG,cAAc,CAAC,QAAQ,CAAC,IAC/BH,MAAM,CAACG,cAAc,CAAC,oBAAoB,CAAC,IAC3CH,MAAM,CAACG,cAAc,CAAC,sBAAsB,CAAC,IAC7CH,MAAM,CAACG,cAAc,CAAC,WAAW,CAAC,IAClCH,MAAM,CAACG,cAAc,CAAC,UAAU,CAAC;;AAG5C"},"metadata":{},"sourceType":"module","externalDependencies":[]}